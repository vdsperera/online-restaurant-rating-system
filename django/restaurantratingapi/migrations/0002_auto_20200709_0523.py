# Generated by Django 3.0.6 on 2020-07-09 05:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('restaurantratingapi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('check_in_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'check_in',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('dish_id', models.AutoField(primary_key=True, serialize=False)),
                ('dish_name', models.CharField(max_length=50)),
                ('status', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='dish_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dish_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dish',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EditComponent',
            fields=[
                ('component_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('component_name', models.CharField(max_length=255)),
                ('confirmation_point_level', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'edit_component',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EditHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('current_value', models.CharField(max_length=255)),
                ('requested_value', models.CharField(max_length=255)),
                ('status', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('confirmed_by', models.ForeignKey(db_column='confirmed_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='edit_history_confirmed_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'edit_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('meal_id', models.AutoField(primary_key=True, serialize=False)),
                ('meal_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'meal',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('rating_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dish_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('price_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('service_rating', models.PositiveIntegerField(blank=True, null=True)),
                ('verified', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'rating',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reporting',
            fields=[
                ('reporting_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('reporter', models.ForeignKey(db_column='reporter', on_delete=django.db.models.deletion.DO_NOTHING, related_name='reporting_type_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('restaurant_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('longitude', models.FloatField(null=True)),
                ('latitude', models.FloatField(null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('claimed', models.PositiveIntegerField()),
                ('code', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('claimed_by', models.ForeignKey(blank=True, db_column='claimed_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'restaurant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AddedDishRating',
            fields=[
                ('rating', models.OneToOneField(db_column='rating_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='added_dish_rating_rating', serialize=False, to='restaurantratingapi.Rating')),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'added_dish_rating',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AddedRating',
            fields=[
                ('rating', models.OneToOneField(db_column='rating_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='added_rating_rating', serialize=False, to='restaurantratingapi.Rating')),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'added_rating',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CustomerCheckIn',
            fields=[
                ('check_in', models.OneToOneField(db_column='check_in_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='customer_check_in_check_in', serialize=False, to='restaurantratingapi.CheckIn')),
            ],
            options={
                'db_table': 'customer_check_in',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantComponentReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='resraurant_component_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
            ],
            options={
                'db_table': 'restaurant_component_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='restaurant_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
            ],
            options={
                'db_table': 'restaurant_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('rating', models.OneToOneField(db_column='rating_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='review_rating', serialize=False, to='restaurantratingapi.Rating')),
                ('message', models.TextField(blank=True, null=True)),
                ('attachment', models.ImageField(blank=True, null=True, upload_to='')),
                ('upvote_count', models.PositiveIntegerField()),
                ('report_count', models.PositiveIntegerField(db_column='report count')),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'review',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReviewReplyReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='review_reply_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
            ],
            options={
                'db_table': 'review_reply_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReviewReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='review_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
            ],
            options={
                'db_table': 'review_reporting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WarningLevel',
            fields=[
                ('warning_level', models.AutoField(primary_key=True, serialize=False)),
                ('warning_level_name', models.CharField(max_length=50)),
                ('allocated_points', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='warning_level_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='warning_level_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'warning_level',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Warning',
            fields=[
                ('warning_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='warning_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='warning_updated_by', to=settings.AUTH_USER_MODEL)),
                ('warning_level', models.ForeignKey(db_column='warning_level', on_delete=django.db.models.deletion.DO_NOTHING, related_name='warning_warning_level', to='restaurantratingapi.WarningLevel')),
            ],
            options={
                'db_table': 'warning',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserEditHistoryConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_points', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('history', models.ForeignKey(db_column='history_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_edit_history_confirmation_history', to='restaurantratingapi.EditHistory')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_edit_history_confirmation_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_edit_history_confirmation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserEditHistoryComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('component', models.ForeignKey(db_column='component_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_edit_history_component_component', to='restaurantratingapi.EditComponent')),
                ('history', models.ForeignKey(db_column='history_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_edit_history_component_history', to='restaurantratingapi.EditHistory')),
                ('restaurant', models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_edit_history_component_restaurant', to='restaurantratingapi.Restaurant')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_edit_history_component_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_edit_history_component',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('token_number', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='token_created_by', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='token_restaurant', to='restaurantratingapi.Restaurant')),
            ],
            options={
                'db_table': 'token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantMeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_meal_created_by', to=settings.AUTH_USER_MODEL)),
                ('meal', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='restaurantratingapi.Meal')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurantratingapi.Restaurant')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_meal_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'restaurant_meal',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RestaurantDish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(db_column='added_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_dish_added_by', to=settings.AUTH_USER_MODEL)),
                ('dish', models.ForeignKey(db_column='dish_id', on_delete=django.db.models.deletion.PROTECT, related_name='restaurant_dish_dish', to='restaurantratingapi.Dish')),
                ('restaurant', models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_dish_restaurant', to='restaurantratingapi.Restaurant')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_dish_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'restaurant_dish',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReportingType',
            fields=[
                ('reporting_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('reporting_type_name', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='report_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='report_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reporting_type',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='reporting',
            name='reporting_type',
            field=models.ForeignKey(db_column='reporting_type', on_delete=django.db.models.deletion.DO_NOTHING, related_name='reporting_reporting_type', to='restaurantratingapi.ReportingType'),
        ),
        migrations.AddField(
            model_name='reporting',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reporting_type_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('reply_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='reply_created_by', to=settings.AUTH_USER_MODEL)),
                ('rating', models.ForeignKey(db_column='rating_id', on_delete=django.db.models.deletion.CASCADE, related_name='reply_rating', to='restaurantratingapi.Rating')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reply_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContributionType',
            fields=[
                ('contribution_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('contribution_name', models.CharField(max_length=50)),
                ('allocated_points', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='contribution_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contribution_type_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contribution_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('contribution_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('contribution_type', models.ForeignKey(db_column='contribution_type', on_delete=django.db.models.deletion.DO_NOTHING, related_name='contribution_contribution_type', to='restaurantratingapi.ContributionType')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='contribution_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contribution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserReporting',
            fields=[
                ('reporting', models.OneToOneField(db_column='reporting_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_reporting_reporting', serialize=False, to='restaurantratingapi.Reporting')),
                ('reporte', models.ForeignKey(db_column='reporte_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_reporting_reporte', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_reporting',
                'managed': True,
            },
        ),
        migrations.AddConstraint(
            model_name='useredithistoryconfirmation',
            constraint=models.UniqueConstraint(fields=('user_id', 'history_id'), name='unique_user_edit_history_confirmation'),
        ),
        migrations.AddConstraint(
            model_name='useredithistorycomponent',
            constraint=models.UniqueConstraint(fields=('user_id', 'history_id', 'restaurant_id', 'component_id'), name='unique_user_edit_history_component'),
        ),
        migrations.AddField(
            model_name='reviewreporting',
            name='rating',
            field=models.ForeignKey(db_column='rating_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_reporting_rating', to='restaurantratingapi.Rating'),
        ),
        migrations.AddField(
            model_name='reviewreplyreporting',
            name='reply',
            field=models.ForeignKey(db_column='reply_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_reply_reporting_reply', to='restaurantratingapi.Reply'),
        ),
        migrations.AddField(
            model_name='review',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='review_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurantreporting',
            name='restaurant',
            field=models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_reporting_reporte', to='restaurantratingapi.Restaurant'),
        ),
        migrations.AddConstraint(
            model_name='restaurantmeal',
            constraint=models.UniqueConstraint(fields=('meal', 'restaurant'), name='unique_restaurant_meal'),
        ),
        migrations.AddConstraint(
            model_name='restaurantdish',
            constraint=models.UniqueConstraint(fields=('dish_id', 'restaurant_id', 'added_by'), name='unique_restaurant_dish'),
        ),
        migrations.AddField(
            model_name='restaurantcomponentreporting',
            name='component',
            field=models.ForeignKey(db_column='component_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_component_reporting_component', to='restaurantratingapi.EditComponent'),
        ),
        migrations.AddField(
            model_name='restaurantcomponentreporting',
            name='restaurant',
            field=models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='restaurant_component_reporting_reporte', to='restaurantratingapi.Restaurant'),
        ),
        migrations.AddField(
            model_name='customercheckin',
            name='restaurant',
            field=models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='customer_check_in_restaurant', to='restaurantratingapi.Restaurant'),
        ),
        migrations.AddField(
            model_name='customercheckin',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='customer_check_in_user_id', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addedrating',
            name='restaurant',
            field=models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_rating_restaurant', to='restaurantratingapi.Restaurant'),
        ),
        migrations.AddField(
            model_name='addedrating',
            name='token_number',
            field=models.ForeignKey(blank=True, db_column='token_number', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_rating_token', to='restaurantratingapi.Token'),
        ),
        migrations.AddField(
            model_name='addedrating',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_rating_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addeddishrating',
            name='dish',
            field=models.ForeignKey(db_column='dish_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_dish_rating_dish', to='restaurantratingapi.Dish'),
        ),
        migrations.AddField(
            model_name='addeddishrating',
            name='restaurant',
            field=models.ForeignKey(db_column='restaurant_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_dish_rating_restaurant', to='restaurantratingapi.Restaurant'),
        ),
        migrations.AddField(
            model_name='addeddishrating',
            name='token_number',
            field=models.ForeignKey(blank=True, db_column='token_number', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_dish_rating_token', to='restaurantratingapi.Token'),
        ),
        migrations.AddField(
            model_name='addeddishrating',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_dish_rating_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
